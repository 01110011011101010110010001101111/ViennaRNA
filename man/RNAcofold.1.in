.\" .ER
.TH "RNACOFOLD" "l" "1.5" "Ivo Hofacker" "ViennaRNA"
.SH "NAME"
RNAcofold \- calculate secondary structures of RNA dimers
.SH "SYNOPSIS"
\fBRNAfold\fP [\-p[\fI0\fP]] [\-C] [\-T\ \fItemp\fP] [\-4] [\-d[0|1|2|3]] [\-noLP] [\-noGU] [\-noCloseGU] [\-e\ \fI1|2\fP] [\-P\ \fIparamfile\fP] [\-nsp\ \fIpairs\fP] [\-S\ \fIscale\fP]

.SH "DESCRIPTION"
.I RNAcofold
reads RNA sequences from stdin and calculates their minimum free energy
(mfe) structure, partition function (pf) and base pairing probability
matrix. RNAcofold can handle 2 molecules, the sequences must be seperated
by a '&' character. It returns the mfe structure in bracket notation, its
energy, the free energy of the thermodynamic ensemble and the frequency of
the mfe structure in the ensemble to stdout.  It also produces PostScript files
with plots of the resulting secondary structure graph and a "dot plot" of
the base pairing matrix.  The dot plot shows a matrix of squares with area
proportional to the pairing probability in the upper half, and one square
for each pair in the minimum free energy structure in the lower half. A
cross indicates where the "gap between the sequences is located. For
each pair i\-j with probability p>10E\-6 there is a line of the form
.br 
i  j  sqrt(p)  ubox
.br 
in the PostScript file, so that the pair probabilities can be easily
extracted. 
If the sequence is preceded by a line of the form
.br 
> name
.br 
then the PostScript files name_ss.ps and name_dp.ps are produced for
the structure and dot plot, respectively. Otherwise the filenames
default to rna.ps and dot.ps. Existing files of the same name will be
overwritten.
.br 
The program will continue to read new sequences until a line consisting
of the single character @ or an end of file condition is encountered.
.SH "OPTIONS"
.TP 
.B \-p
Calculate the partition function and base pairing probability matrix in
addition to the mfe structure. Default is calculation of mfe structure
only. Note that unless you also specify \-d2 or \-d0, the partition
function and mfe calculations will use a slightly different energy
model. See the discussion of dangling end options below.
.TP 
.B \-p0
Calculate the partition function but not the pair probabilities,
saving about 50% in runtime. Prints the ensemble free energy \-kT ln(Z).
.TP 
.B \-C
Calculate structures subject to constraints. 
The programm reads first the sequence then the a string containg constraints 
on the structure encoded with the symbols:  
. (no constraint for this base)
| (the corresponding base has to be paired
x (the base is unpaired)
< (base i is paired with a base j>i)
> (base i is paired with a base j<i)
and matching brackets ( ) (base i pairs base j)
With the exception of "|", constraints will disallow all pairs conflicting
with the constraint. This is usually sufficient to enforce the constraint,
but occasionally a base may stay unpaired in spite of constraints. PF
folding ignores constraints of type "|".
.TP 
.B \-T\ \fItemp\fP
Rescale energy parameters to a temperature of \fItemp\fP C. Default is 37C.
.TP 
.B \-4
Do not include special stabilizing energies for certain tetraloops. Mostly
for tesing.
.TP 
.B \-d[0|2]
How to treat "dangling end" energies for bases adjacent to helices in
free ends and multiloops: Either dangling ends are ignored (\fB\-d0\fP), or
dangling energies will be added for the bases adjacent to a helix on both
sides in any case (\fB\-d2\fP); (default).
.br
Note that by default (as well as with \-d1 and \-d3) pf and mfe
folding treat dangling ends differently. Use \fB\-d2\fR in addition to
\fB\-p\fR to ensure that both algorithms use the same energy model.
.TP 
.B \-noLP
Produce structures without lonely pairs (helices of length 1). 
For partition function folding this only disallows pairs that can 
\fBonly\fP occur isolated. Other pairs may still occasionally 
occur as helices of length 1.
.TP 
.B \-noGU
Do not allow GU pairs.
.TP 
.B \-noCloseGU
Do not allow GU pairs at the end of helices.
.TP 
.B \-e\ \fI1|2\fP
Rarely used option to fold sequences from the artificial ABCD... alphabet,
where A pairs B, C\-D etc.  Use the energy parameters for GC (\-e 1) or AU
(\-e 2) pairs.
.TP 
.B \-P\ \fIparamfile\fP
Read energy parameters from \fIparamfile\fP, instead of using the default
parameter set. A sample parameterfile should accompany your distribution.
See the RNAlib documentation for details on the file format.
.TP 
.B \-nsp  \fIpairs\fP
Allow other pairs in addition to the usual AU,GC,and GU pairs. \fIpairs\fP 
is a comma seperated list of additionally allowed pairs. If a the first 
character is a '\-' then AB will imply that AB and BA are allowed pairs.
e.g. RNAcofold \-nsp \-GA  will allow GA and AG pairs. Nonstandard pairs are 
given 0 stacking energy.
.TP 
.B \-S\ \fIscale\fP
In the calculation of the pf use \fIscale\fP*mfe as an estimate for the
ensemble free energy (used to avoid overflows). The default is 1.07,
usefull values are 1.0 to 1.2. Occasionally needed for long sequences.
You can also recompile the programm to use double precision (see the README
file).
.TP
.B \-noconv
I have no idea!
.TP
.B \-a
This will compute the partition function and free energie not only of the
dimer read from standard in or a file (called AB dimer: Sequence A &
Sequence B), but also of the AA and BB dimers and the A and B monomers.
The output will contain the free energies in stdout, as well as 5 dot
plots, called ABname5.ps, AAname5.ps and so on. For later use, these
dot plot files contain the free energie of the ensemble as a comment.
Note that using -a will automatically toggle the -p option.
.TP
.B \-c
Will automatically toggle -a and -p (see -a for reference), but can
additionally compute the expected concentrations of the 5 possible species
(AB, AA, BB, A, B) out of start concentrations of A and B.
The start concentrations are either read in the input file as x y table
after the sequence, or are to be put in during run. Output same as -a and a
table with star concentrations and ensemble concentrations.
.TP 
.B \-f\ \fIconcfile\fP
To give the -c option a file with a x y table of concentrations.
Will automatically toggle -a, -c and -p option (see above) 

.SH "REFERENCES"
The calculation of mfe structures is based on dynamic
programming algorithm originally developed by M. Zuker and P. Stiegler.
The partition function algorithm is based on work by J.S. McCaskill.
The energy parameters are taken from:
.br 
D.H. Mathews, J. Sabina, M. Zucker and H. Turner
"Expanded Sequence Dependence of Thermodynamic Parameters Provides 
Robust Prediction of RNA Secondary Structure"
JMB, 288, pp 911\-940, 1999
.br 
A. Walter, D Turner, J Kim, M Lyttle, P M\[:u]ller, D Mathews, M Zuker
"Coaxial stacking of helices enhances binding of oligoribonucleotides.."
PNAS, 91, pp 9218\-9222, 1994
.PP 
If you use this program in your work you might want to cite:
.PP 
I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster 
(1994)
Fast Folding and Comparison of RNA Secondary Structures.
Monatshefte f. Chemie 125: 167\-188
.br 
M. Zuker, P. Stiegler (1981) Optimal computer folding of large RNA
sequences using thermodynamic and auxiliary information, Nucl Acid Res
9: 133\-148
.br 
J.S. McCaskill (1990) The equilibrium partition function and base pair
binding probabilities for RNA secondary structures, Biopolymers 29: 1105\-1119
.br 
D. Adams (1979) The hitchhiker's guide to the galaxy, Pan Books, London
.SH "VERSION"
This man page documents version @VERSION@ Vienna RNA Package.
.SH "AUTHORS"
Ivo L Hofacker, Walter Fontana, Sebastian Bonhoeffer, Peter F Stadler,
Stephan Bernhart.
.SH "BUGS"
If in doubt our program is right, nature is at fault.
Comments should be sent to ivo@tbi.univie.ac.at.

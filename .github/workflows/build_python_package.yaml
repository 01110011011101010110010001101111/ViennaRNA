name: Build

on: [push]

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    outputs:
      vrna_sdist_file: ${{ steps.create_sdist.outputs.file }}

    steps:
      - uses: actions/checkout@v3
      - name: install prerequisites
        run:  sudo apt-get -y install build-essential autoconf automake swig doxygen gengetopt help2man libtool check graphviz doxygen-latex
      - name: autotools setup
        run:  autoreconf -i
      - name: extract dlib
        run:  tar -xjf src/dlib-19.24.tar.bz2 -C src
      - name: extract libsvm
        run:  tar -xzf src/libsvm-3.31.tar.gz -C src
      - name: configure
        run: ./configure --without-kinfold --without-forester --without-rnalocmin --without-rnaxplorer --without-perl --without-gsl --disable-mpfr
      - name: prepare source files
        run:  |
          cd src/ViennaRNA/static
          make
      - name: prepare doxygen XML
        run: |
          cd doc
          make refman-html
      - name: prepare Python wrapper
        run: |
          cd interfaces/Python
          make RNA/RNA.py
      - id: create_sdist
        name: build Python source distribution
        run:  |
          python -m pip install --upgrade build
          python -m build --sdist
          echo "file=$(cd dist && ls ViennaRNA-*.tar.gz)" >> "$GITHUB_OUTPUT"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: build_sdist
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sdist
      - name: Set sdist environment variable
        run:  |
          echo "VRNA_SDIST_FILE=${{needs.build_sdist.outputs.vrna_sdist_file}}" >> "$GITHUB_ENV"
      - name: Build wheels
        if: runner.os != 'Windows'
        uses: pypa/cibuildwheel@v2.13.1
        with:
          package-dir: "$VRNA_SDIST_FILE"
          output-dir: dist
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
        env:
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: VRNA_TEST_DATA={package}/tests/data pytest {package}/tests/python
          CIBW_SKIP: cp37-* pp*
          CIBW_ENVIRONMENT: VRNA_SDIST_FILE=$VRNA_SDIST_FILE
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.14 CC=clang CXX=clang++
      - name: Build wheels - Windows
        if: runner.os == 'Windows'
        uses: pypa/cibuildwheel@v2.13.1
        with:
          package-dir: "$env:VRNA_SDIST_FILE"
          output-dir: dist
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
        env:
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: VRNA_TEST_DATA={package}/tests/data pytest {package}/tests/python
          CIBW_SKIP: cp37-* pp*
          CIBW_ENVIRONMENT: VRNA_SDIST_FILE=$env:VRNA_SDIST_FILE
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl
